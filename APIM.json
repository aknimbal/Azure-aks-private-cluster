{
    "$schema": "https://schema.management.azure.com/schemas/2019-04-01/deploymentTemplate.json#",
    "contentVersion": "1.0.0.0",
    "parameters": {
        "apimname": {
            "type": "String"
        },
        "sku": {
            "type": "string"
        },
        "capacity": {
            "type": "int"
        },
        "apimEmail": {
            "type": "string"
        },
        "appinsightsID": {
            "defaultValue": "/subscriptions/5f1c1322-cebc-4ea3-8779-fac7d666e18f/resourceGroups/POCInspire/providers/microsoft.insights/components/apiminsights",
            "type": "String"
        },
        "subnetID": {
            "type": "string"
        },
        "loggerName": {
            "type": "string"
        }
    },
    "variables": {},
    "resources": [
        {
            "apiVersion": "2019-01-01",
            "name": "[parameters('apimname')]",
            "location": "[resourceGroup().location]",
            "type": "Microsoft.ApiManagement/service",
            "sku": {
                "name": "[parameters('sku')]",
                "capacity": "[parameters('capacity')]"
            },
            "properties": {
                "publisherEmail": "[parameters('apimEmail')]",
                "publisherName": "Inspire Brands",
                "notificationSenderEmail": "apimgmt-noreply@mail.windowsazure.com",
                "hostnameConfigurations": [
                    {
                        "type": "Proxy",
                        "hostName": "[concat(parameters('apimname'), '.azure-api.net')]",
                        "negotiateClientCertificate": false,
                        "defaultSslBinding": true
                    }
                ],
                "virtualNetworkConfiguration": {
                    "subnetResourceId": "[parameters('subnetID')]"
                },
                "customProperties": {
                    "Microsoft.WindowsAzure.ApiManagement.Gateway.Security.Protocols.Tls10": "False",
                    "Microsoft.WindowsAzure.ApiManagement.Gateway.Security.Protocols.Tls11": "False",
                    "Microsoft.WindowsAzure.ApiManagement.Gateway.Security.Protocols.Ssl30": "False",
                    "Microsoft.WindowsAzure.ApiManagement.Gateway.Security.Ciphers.TripleDes168": "False",
                    "Microsoft.WindowsAzure.ApiManagement.Gateway.Security.Backend.Protocols.Tls10": "False",
                    "Microsoft.WindowsAzure.ApiManagement.Gateway.Security.Backend.Protocols.Tls11": "False",
                    "Microsoft.WindowsAzure.ApiManagement.Gateway.Security.Backend.Protocols.Ssl30": "False",
                    "Microsoft.WindowsAzure.ApiManagement.Gateway.Protocols.Server.Http2": "False"
                },
                "virtualNetworkType": "Internal",
                "disableGateway": false,
                "apiVersionConstraint": {}
            },
            "resources": [
                {
                    "apiVersion": "2019-01-01",
                    "type": "loggers",
                    "name": "[parameters('loggerName')]",
                    "dependsOn": [
                        "[concat('Microsoft.ApiManagement/service/', parameters('apimname'))]"
                    ],
                    "properties": {
                        "loggerType": "applicationInsights",
                        "resourceId": "[parameters('appInsightsId')]",
                        "credentials": {
                            "instrumentationKey": "[reference(parameters('appInsightsId'), '2015-05-01').InstrumentationKey]"
                        }
                    }
                },
                {
                    "apiVersion": "2019-01-01",
                    "type": "diagnostics",
                    "name": "applicationinsights",
                    "dependsOn": [
                        "[concat('Microsoft.ApiManagement/service/', parameters('apimname'))]",
                        "[concat('Microsoft.ApiManagement/service/', parameters('apimname'), '/loggers/', parameters('loggerName'))]"
                    ],
                    "properties": {
                        "loggerId": "[concat('/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.ApiManagement/service/', parameters('name'), '/loggers/', parameters('loggerName'))]",
                        "alwaysLog": "allErrors",
                        "sampling": {
                            "percentage": 100,
                            "samplingType": "fixed"
                        }
                    }
                }
            ]
        }
    ]
}